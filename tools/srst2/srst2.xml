<tool id="srst2" name="SRST2" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Short Read Sequence Typing for Bacterial Pathogens</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <version_command>srst2 --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
#if $input.selector == "single"
#set ext=$input.single_input.datatype.file_ext
    ln -s $input.single_input ./input_read1.$ext
#else if $input.selector == "paired"
#set ext_1=$input.paired_input1.datatype.file_ext
#set ext_2=$input.paired_input2.datatype.file_ext
    ln -s $input.paired_input1 ./input_read1.$ext_1 &&
    ln -s $input.paired_input2 ./input_read2.$ext_2
#end if
&&
srst2    
#if $input.selector == "single"
    --input_se ./input_read1.$ext
#else if $input.selector == "paired"
    --input_pe ./input_read1.$ext_1 ./input_read2.$ext_2
    $input.merge_paired
    --forward _read1
    --reverse _read2
#end if
    --read_type '$read_type'
#if $use_mlst_db.selector == "yes"    
    --mlst_db '$use_mlst_db.mlst_db'
    --mlst_definitions '$use_mlst_db.mlst_definitions'
    --mlst_delimiter '_'
#end if
    --mlst_max_mismatch $mlst_max_mismatch
#if $gene_db
    --gene_db '$gene_db'
#end if
    $no_gene_details
    --gene_max_mismatch $gene_max_mismatch
    --min_coverage $min_coverage
    --max_divergence $max_divergence
    --min_depth $min_depth
    --min_edge_depth $min_edge_depth
    --prob_err $prob_err
#if $truncation_score_tolerance     
    --truncation_score_tolerance $truncation_score_tolerance
#end if
#if $stop_after    
    --stop_after $stop_after
#end if    
    --max_unaligned_overlap $max_unaligned_overlap
    --mapq $mapq
    --baseq $baseq
    --output 'srst2_output'
    $log
    $save_scores
    $report_new_consensus
    $report_all_consensus
    $use_existing_bowtie2_sam
    $use_existing_pileup
    $use_existing_scores
    $keep_interim_alignment
#if $prev_output
    --prev_output '$prev_output'
#end if    
    ]]></command>
    <inputs>
        <conditional name="input">
            <param name="selector" type="select" label="Reads files type for anaylsis">
                <option value="single">Single-end</option>
                <option value="paired">Paired-end</option>
            </param>
            <when value="single">
                <param name="single_input" type="data" format="fasta,fastq,fastqsanger" label="Single end read file(s) for analysing (may be gzipped)"/>
            </when>
            <when value="paired">
                <param name="paired_input1" type="data" format="fasta,fastq,fastqsanger" label="Paired end read files for analysing (may be gzipped)"/>
                <param name="paired_input2" type="data" format="fasta,fastq,fastqsanger" label="Paired end read files for analysing (may be gzipped)"/>                
                <param argument="--merge_paired" type="boolean" truevalue="--merge_paired" falsevalue="" checked="false" label="Do you want to merge the data to get a single result" help="Important only if all the input read sets belong to a single sample"/> 
            </when>           
        </conditional>
        <param argument="--read_type" type="select" label="Read file type">
            <option value="q" selected="true">fastq</option>
            <option value="qseq">solexa</option>
            <option value="f">fasta</option>
        </param>
        <conditional name="use_mlst_db">
            <param name="selector" type="select" label="Do you want to provide an MLST database of all allele sequences for the MLST scheme?">
                <option value="yes">Yes</option>
                <option value="no">No</option>
            </param>
            <when value="yes">
                <param argument="--mlst_db" type="data" format="fasta" label="Fasta file of MLST alleles"/>
                <param argument="--mlst_definitions" type="data" format="tabular" label="ST definitions for MLST scheme" help="This is the file that tells you the ST number that is assigned to known combinations of alleles. Column 1 is the ST, and subsequent columns are the loci that make up the scheme."/>
            </when>
            <when value="no">
            </when>
        </conditional>
        <param argument="--mlst_max_mismatch" type="integer" value="10" label="Maximum number of mismatches per read for MLST allele calling"/>
        <param argument="--gene_db" type="data" optional="true" multiple="true" format="fasta" label="Gene database(s)" help="Fasta file/s for gene databases"/>
        <param argument="--no_gene_details" type="boolean" truevalue="" falsevalue="--no_gene_details" checked="false" label="Do you want reporting of gene typing?"/>
        <param argument="--gene_max_mismatch" type="integer" value="10" label="Maximum number of mismatches per read for gene detection and allele calling"/>
        <param argument="--min_coverage" type="integer" value="90" label="Minimum %coverage cutoff for gene reporting"/>
        <param argument="--max_divergence" type="integer" value="10" label="Maximum %divergence cutoff for gene reporting"/>
        <param argument="--min_depth" type="integer" value="5" label="Minimum mean depth to flag as dubious allele call"/>
        <param argument="--min_edge_depth" type="integer" value="2" label="Minimum edge depth to flag as dubious allele call"/>
        <param argument="--prob_err" type="float" value="0.01" label="Probability of sequencing error"/>
        <param argument="--truncation_score_tolerance" optional="true" type="float" label="% increase in score allowed to choose non-truncated allele"/>
        <param argument="--stop_after" type="integer" optional="true" label="Stop mapping after this number of reads have been mapped" help="Leave empty to map all"/>
        <param argument="--max_unaligned_overlap" type="integer" value="10" label="Read discarded from alignment" help="if either of its ends has unaligned overlap with the reference that is longer than this value"/>
        <param argument="--mapq" type="integer" value="1" label="Samtools -q parameter (Minimum mapping quality)"/>
        <param argument="--baseq" type="integer" value="20" label="Samtools -Q parameter (Minimum base quality)"/>
        <param argument="--log" type="boolean" truevalue="--log" falsevalue="" checked="false" label="Do you want to save the log?"/>
        <param argument="--save_scores" type="boolean" truevalue="--save_scores" falsevalue="" checked="false" label="Do you want reporting of scores?"/>
        <param argument="--report_new_consensus" type="boolean" truevalue="--report_new_consensus" falsevalue="" checked="false" label="Do you want to report the consensus allele if a matching alleles is not found?"/>
        <param argument="--report_all_consensus" type="boolean" truevalue="--report_all_consensus" falsevalue="" checked="false" label="Do you want to report the consensus allele for the most likely allele?"/>
        <param argument="--use_existing_bowtie2_sam" type="boolean" truevalue="--use_existing_bowtie2_sam" falsevalue="" checked="false" label="Do you want to use existing SAM file generated by Bowtie2?"/>
        <param argument="--use_existing_pileup" type="boolean" truevalue="--use_existing_pileup" falsevalue="" checked="false" label="Do you want to use existing pileups?"/>
        <param argument="--use_existing_scores" type="boolean" truevalue="--use_existing_scores" falsevalue="" checked="false" label="Do you want to use existing scores files?"/>
        <param argument="--keep_interim_alignment" type="boolean" truevalue="--keep_interim_alignment" falsevalue="" checked="false" label="Do you want to keep interim files (sam and unsorted bam)?"/>
        <param argument="--prev_output" type="data" format="tabular,txt" multiple="true" optional="true" label="SRST2 results files to compile" help="Any new results from this run will also be incorporated"/>
    </inputs>
    <outputs>
        <data name="output_mlst_results" format="tabular" from_work_dir="srst2_output/*__mlst__*__results.txt" label="${tool.name} on ${on_string}:MLST results"/>
    
    </outputs>
    <tests>
  
    </tests>
    <help><![CDATA[
@HELP_HEADER@

SRST2
=====
Short Read Sequence Typing for Bacterial Pathogens

This program is designed to take Illumina sequence data, a MLST database and/or a database of gene sequences (e.g. resistance genes, virulence genes, etc) and report the presence of STs and/or reference genes

Read more about the tool: https://holtlab.net/2014/12/27/behind-the-paper-srst2-for-short-read-sequence-typing-of-bacterial-pathogens/

Input
=====


Output
======

    ]]></help> 
    <citations>
        <citation type="doi">10.1186/s13073-014-0090-6</citation>
    </citations>
 </tool>