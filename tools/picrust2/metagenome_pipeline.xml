<tool id="picrust2_metagenome_pipeline" name="Picrust2 Metagenome Pipeline" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Metagenome prediction</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <version_command>metagenome_pipeline.py -v</version_command>
    <command detect_errors="exit_code"><![CDATA[
ln -s '$input' 'input.biom' &&    
metagenome_pipeline.py
    --input 'input.biom'
    --function '$function'
    --marker '$marker'
    $strat_out
    $wide_table
    $skip_norm
    --max_nsti '$max_nsti'
    --min_reads '$min_reads'
    --min_samples '$min_samples'
    --out_dir 'metagenome_output'
&&
cd ./metagenome_output
&&
gunzip *tsv.gz
&& ls .
    ]]></command>
    <inputs>
        <param name="input" type="data" format="tsv,biom1,biom2,mothur.shared" label="Input table of sequence abundances" help="BIOM, TSV, or mothur shared file format"/>
        <param name="function" type="data" format="tsv,tabular" label="Table of predicted gene family copy numbers" help="output of HSP"/>
        <param name="marker" type="data" format="tsv,tabular" label="Table of predicted marker gene copy numbers" help="output of HSP - typically for 16S"/>
        <param argument="--max_nsti" type="float" value="2.0" optional="true" label="Sequences with NSTI values above this value will be excluded"/>
        <param argument="--min_reads" type="integer" value="1" optional="true" label="Minimum number of reads across all samples for each input ASV." help="ASVs below this cut-off will be counted as part of the RARE category in the stratified output"/>
        <param argument="--min_samples" type="integer" value="1" optional="true" label="Minimum number of samples that an ASV needs to be identfied within" help="ASVs below this cut-off will be counted as part of the RARE category in the stratified output"/>
        <param name="strat_out" type="boolean" truevalue='--strat_out' falsevalue='' checked="false" label="Output table stratified by sequences as well"/> 
        <param name="wide_table" type="boolean" truevalue='--wide_table' falsevalue='' checked="false" label="Output wide-format stratified table of metagenome predictions"/> 
        <param name="skip_norm" type="boolean" truevalue='--skip_norm' falsevalue='' checked="false" label="Skip normalizing sequence abundances by predicted marker gene copy numbers"/> 
    </inputs>
    <outputs>
        <data name="pred_metagenome_unstrat" format="tsv" from_work_dir="metagenome_output/pred_metagenome_unstrat.tsv" label="Prediction metagenome unstratified">
        </data>
        <data name="seqtab_norm" format="tsv" from_work_dir="metagenome_output/seqtab_norm.tsv" label="Seqtab norm">
        </data>
        <data name="weighted_nsti" format="tsv" from_work_dir="metagenome_output/weighted_nsti.tsv" label="Weighted NSTI">
        </data>
        <data format="tsv" name="strat_output" from_work_dir="metagenome_output/pred_metagenome_contrib.tsv" label="Stratified by Sequences Table" >
            <filter>strat_out is True and wide_table is False</filter>
        </data>
        <data format="tsv" name="wide_table_output" from_work_dir="metagenome_output/pred_metagenome_strat.tsv" label="Stratified by Sequences Wide Table" >
            <filter>strat_out is True and wide_table is True</filter>
        </data>        
    </outputs>
    <tests>
    <test expect_num_outputs="3">
        <param name="input" ftype="biom1" value="table.biom"/>
        <param name="function" ftype="tabular" value="EC_predicted.tsv.gz"/>
        <param name="marker" ftype="tabular" value="16S_predicted_and_nsti.tsv.gz"/>
        <param name="max_nsti" value="2.0"/>
        <param name="min_reads" value="1"/>
        <param name="min_samples" value="1"/>
        <param name="strat_out" value="false"/>
        <param name="wide_table" value="false"/>
        <param name="skip_norm" value="false"/>
        <output name="pred_metagenome_unstrat" ftype="tsv">
            <assert_contents>
                <has_text text="function"/>
                <has_n_lines n="1000"/>
            </assert_contents>
        </output>
        <output name="seqtab_norm" ftype="tsv">
            <assert_contents>
                <has_text text="normalized"/>
                <has_n_lines n="38"/>
            </assert_contents>
        </output>
        <output name="weighted_nsti" ftype="tsv">
            <assert_contents>
                <has_text text="weighted_NSTI"/>
                <has_n_lines n="25"/>
            </assert_contents>
        </output>
    </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

Metagenome Pipeline
===================
Reads in a sequence abundance table (the abundances of OTUs or ASVs in BIOM, TSV, or mothur shared file format), the predicted marker gene abundances, and the predicted gene family abundances (these last two files are output by hsp.py). 

Note
====
Per-sample metagenome functional profiles are generated based on the predicted functions for each study sequence. Note that typically these sequences correspond to OTUs or ASVs. The specified sequence abundance table will be normalized by the predicted number of marker gene copies before outputting the final files by default. The sample metagenome table stratified by contributing ASVs can optionally also be output.

The sequence abundances should be in read counts and not relative abundances. It will normalize the input sequence abundance table by the predicted number of marker genes. It will then determine the predicted functional profiles per sample. Output stratified by sequence ids (i.e. taxonomic contributors) will also be output if the --strat_out option is used. Also, rare ASVs can be collapsed into the same category in the stratified output table based on the --min_reads and --min_samples options. Note the output files are tab-delimited even if the input files was in BIOM format. The normalized sequence abundance table and the weighted nearest-sequenced taxon index values per-sample will also be output to the output directory as separate files.

Input
=====
Table of sequence abundances (BIOM, TSV, or mothur shared file format).

Output
======
Metagenome predictions.

    ]]></help> 
    <citations>
        <citation type="doi">10.1038/s41587-020-0548-6</citation>
    </citations>
</tool>