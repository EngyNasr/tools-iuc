<tool id="picrust2_pathway_pipeline" name="Infer pathway abundances" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Infer the presence and abundances of pathways based on gene family abundances</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <version_command>pathway_pipeline.py -v</version_command>
    <command detect_errors="exit_code"><![CDATA[
pathway_pipeline.py
    --input '$input'
    --out_dir 'pathway_output'
#if $map    
    --map '$map'
#end if    
    $skip_minpath
    $no_gap_fill
#if $intermediate_check
    --intermediate 'intermediate_out'
#end if
    -p "\${GALAXY_SLOTS:-1}"
    $no_regroup
    $coverage
#if $id_map
    --regroup_map '$id_map'
#end if    
    $per_sequence_contrib
#if $per_sequence_abun
    --per_sequence_abun '$per_sequence_abun'
#end if    
#if $per_sequence_function
    --per_sequence_function '$per_sequence_function'
#end if
    $wide_table
&&
cd ./pathway_output
&&
gunzip *tsv.gz
#if $intermediate_check
&& cd ..
&& ls .
&& zip -r intermediate_out.zip intermediate_out/
#end if
    ]]></command>
    <inputs>
        <param name="input" type="data" format="tsv,tabular" label="Input TSV table of gene family abundances" help="Either the unstratified or stratified output of metagenome_pipeline.py"/>
        <param name="map" type="data" format="txt,tsv" optional="true" label="Mapping of pathways to reactions" help="The default mapfile maps MetaCyc reactions to prokaryotic MetaCyc pathways"/>
        <param name="skip_minpath" type="boolean" truevalue='--skip_minpath' falsevalue='' checked="false" label="Do not run MinPath to identify which pathways are present as a first pass"/> 
        <param name="no_gap_fill" type="boolean" truevalue='--no_gap_fill' falsevalue='' checked="false" label="Do not perform gap filling before predicting pathway abundances"/> 
        <param name="no_regroup" type="boolean" truevalue='--no_regroup' falsevalue='' checked="false" label="Do not regroup input gene families to reactions as specified in the regrouping mapfile"/> 
        <param name="coverage" type="boolean" truevalue='--coverage' falsevalue='' checked="false" label="Calculate pathway coverages as well as abundances"/> 
        <param name="id_map" type="data" format="tsv" optional="true" label="Mapfile of ids to regroup gene families to before running MinPath" help="The default mapfile is for regrouping EC numbers to MetaCyc reactions"/>
        <param name="per_sequence_contrib" type="boolean" truevalue='--per_sequence_contrib' falsevalue='' checked="false" label="Per sequence contrib: flag to specify that MinPath is run on the genes contributed by each sequence individually"/> 
        <param name="per_sequence_abun" type="data" format="tsv,tabular" optional="true" label="Table of sequence abundances across samples normalized by marker copy number" help="Typically the normalized sequence abundance table output at the metagenome pipeline step. This input is required when the per sequence contrib option is set."/>
        <param name="per_sequence_function" type="data" format="tsv,tabular" optional="true" label="Table of function abundances per sequence, which was outputted at the hidden-state prediction step" help="This input is required when the per sequence contrib option is set. Note that this file should be the same input table as used for the metagenome pipeline step"/>        
        <param name="wide_table" type="boolean" truevalue='--wide_table' falsevalue='' checked="false" label="Flag to specify that wide-format stratified table should be output rather than metagenome contribution table"/> 
        <param name="intermediate_check" type="boolean" truevalue="intermediate_check" falsevalue="" checked="false" label="Output folder for intermediate files" help="Intermediate output files will be deleted by default"/>
    </inputs>
    <outputs>
        <data name="path_abun_unstrat" format="tsv" from_work_dir="pathway_output/path_abun_unstrat.tsv" label="Pathway abundance unstratified">
        </data>
        <data format="tsv" name="path_cov_unstrat" from_work_dir="pathway_output/path_cov_unstrat.tsv" label="Pathway coverage unstratified" >
            <filter>coverage is True</filter>
        </data>
        <data format="tsv" name="path_abun_unstrat_per_seq" from_work_dir="pathway_output/path_abun_unstrat_per_seq.tsv" label="Pathway abundance unstratified per sequence" >
            <filter>per_sequence_contrib is True</filter>
        </data>
        <data format="tsv" name="path_abun_predictions" from_work_dir="pathway_output/path_abun_predictions.tsv" label="Pathway abundance predictions" >
            <filter>per_sequence_contrib is True</filter>
        </data>
        <data format="tsv" name="path_abun_contrib" from_work_dir="pathway_output/path_abun_contrib.tsv" label="Pathway abundance contributed" >
            <filter>per_sequence_contrib is True</filter>
        </data>
        <data format="zip" name="intermediate_output_files" from_work_dir="intermediate_out.zip" label="Intermediate files/folders (Zip)" >
            <filter>intermediate_check is True</filter>
        </data>
    </outputs>
    <help><![CDATA[
@HELP_HEADER@

Infer pathway abundances
========================
Infer the presence and abundances of pathways based on gene family abundances in a sample. By default, this script expects a table of EC number abundances (as output by PICRUSt2). However, alternative reaction to pathways mapping files can also be specified. By default, EC numbers are first regrouped to MetaCyc reactions, which are then linked to MetaCyc pathways through the default database.

Note
====
Stratified output will only be output if a stratified metagenome is input (or if --per_sequence_contrib is set). Please note that by default stratified abundances are based on how much predicted genomes (e.g. sequences) contribute to the community-wide abundance, not the abundance of the pathway based on the predicted genes in that genome alone. In other words, a predicted genome might be contributing greatly to the community-wide pathway abundance simply because one required gene for that pathway is at extremely high abundance in that genome even though no other required genes for that pathway are present. In contrast, the --per_sequence_contrib option should be used to get the predicted abundance and coverage of each pathway based on the predicted gene families within each genome. Note that using the --per_sequence_contrib option can greatly increase runtime.

Input
=====
Input TSV table of gene family abundances (either the unstratified or stratified output of metagenome_pipeline.py).

Output
======
Pathway abundance.

    ]]></help> 
    <citations>
        <citation type="doi">10.1038/s41587-020-0548-6</citation>
    </citations>
</tool>