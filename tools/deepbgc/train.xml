<tool id="deepbgc_train" name="DeepBGC Train" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Train a BGC detector/classifier on a set of BGC samples</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <version_command>deepbgc</version_command>
    <command detect_errors="exit_code"><![CDATA[
#for $i, $s in enumerate($csv_inputs)
    #if $s
        ln -s '$s' 'file-$i-input.pfam.csv' &&
    #end if
#end for     
ln -s '$model' 'model.json' &&
#if $classes
ln -s '$classes' 'file.classes.csv' &&
#end if
#if $config
    ln -s '$config' 'pfam2vec.csv' &&
#end if    
deepbgc train
    --model 'model.json'
#if $target
    --target '$target'
#end if    
    --output 'output.pkl'
#if $classes    
    --classes 'file.classes.csv'
#end if
#if $config
    --config PFAM2VEC 'pfam2vec.csv'
#end if 
#if $verbose    
    --verbose $verbose
#end if    
#for $i, $s in enumerate($csv_inputs)
    #if $s
      'file-$i-input.pfam.csv'
    #end if
#end for    
    ]]></command>    
    <inputs>
        <param name="csv_inputs" type="data" format="csv" multiple="true" label="Training sequences (Pfam TSV) file(s)"/>
        <param name="model" type="data" format="json" label="JSON model config file"/>
        <param name="target" type="text" format="txt" optional="true" label="Target column to predict in sequence prediction"/>
        <param name="classes" type="data" format="csv" optional="true" label="Class TSV file (csv)" help="Train a sequence classifier using provided classes (binary columns), indexed by sequence_id column."/>
        <param name="config" type="data" format="csv" optional="true" label="Variables in model JSON file to replace"/>        
        <param argument="--verbose" type="integer" optional="true" min="0" max="2" label=" Verbosity level (0=none, 1=progress bar, 2=once per epoch)"/>
    </inputs>
    <outputs>
        <data format="tabular" name="output" label="Output trained model file" />
      <!--  <data format="tabular" name="output" from_work_dir="output.pkl" label="Output trained model file" />
      -->
    </outputs>
    <tests>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

Train
=====
Train a BGC detector/classifier on a set of BGC samples.

Inputs
======
1. Classes (.csv):
   Class TSV file
2. Input training sequences (Pfam TSV) file(s)  

Outputs
=======
1. Output trained model file
2. Log file

    ]]></help> 
    <citations>
        <citation type="doi">10.1093/nar/gkz654</citation>
    </citations>
</tool>