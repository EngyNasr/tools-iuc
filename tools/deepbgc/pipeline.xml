<tool id="deepbgc_pipeline" name="DeepBGC Pipeline" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Preparation, BGC detection, BGC classification and generate the report directory</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <version_command>deepbgc</version_command>
    <command detect_errors="exit_code"><![CDATA[
#for $i, $s in enumerate($fasta_input)
    #if $s
        #set ext=$s.datatype.file_ext
        ln -s '$s' '$i-inputfasta.$ext' &&
    #end if
#end for     
deepbgc download &&
deepbgc pipeline
    --output 'output/'
    --limit-to-record '$limit_to_record'
    --minimal-output '$minimal_output'
#for $i, $s in enumerate($detectors)
    #if $s
        --detector '$s'
    #end if
#end for    
    --no-detector '$no_detector'
    --label '$labels'
    --score '$score'
    --merge-max-protein-gap '$merge_max_protein_gap'
    --merge-max-nucl-gap '$merge_max_nucl_gap'
    --min-nucl '$min_nucl'
    --min-proteins '$min_proteins'
    --min-domains '$min_domains'
    --min-bio-domains '$min_bio_domains'
#for $i, $s in enumerate($classifier)
    #if $s
        --classifier '$s'
    #end if
#end for
    --no-classifier '$no_classifier'
    --classifier-score '$classifier_score'
#for $i, $s in enumerate($fasta_input)
    #if $s
        #set ext=$s.datatype.file_ext
        ln -s '$s' '$i-inputfasta.$ext'
    #end if
#end for
    ]]></command>    
    <inputs>
        <param name="fasta_input" type="data" format="fasta,genbank,csv" multiple="true" label="Input sequence file(s) (FASTA, GenBank, Pfam CSV)"/>
        <param name="limit_to_record" type="text" format="txt" optional="true" multiple="true" label="Limit to record" help="Process only specific record ID. Can be provided multiple times."/>                  
        <param argument="--minimal-output" type="boolean" truevalue="--minimal-output" falsevalue="" optional="true" label="Minimal Output" help="Produce minimal output with just the GenBank sequence file" />
        <param argument="--detector" type="select" optional="true" multiple="true" label="Trained detection model name">
            <option value="deepbgc">deepbgc</option>
            <option value="clusterfinder_original">clusterfinder_original</option>
            <option value="clusterfinder_retrained">clusterfinder_retrained</option>
            <option value="clusterfinder_geneborder">clusterfinder_geneborder</option>
        </param>
        <param argument="--no-detector" type="boolean" truevalue="--no-detector" falsevalue="" optional="true" label="Disable BGC detection" />
        <param name="labels" type="text" format="txt" optional="true" multiple="true" label="Label for detected clusters" help="If multiple detectors are provided, a label should be provided for each one."/>
        <param argument="--score" type="float" value="0.5" optional="true" label="Score" help="Average protein-wise DeepBGC score threshold for extracting BGC regions from Pfam sequences"/>
        <param argument="--merge-max-protein-gap" type="integer" optional="true" value="0" label="Merge detected BGCs within given number of proteins"/>
        <param argument="--merge-max-nucl-gap" type="integer" optional="true" value="0" label="Merge detected BGCs within given number of nucleotides"/>
        <param argument="--min-nucl" type="integer" value="1" optional="true" label="Minimum BGC nucleotide length"/>
        <param argument="--min-proteins" type="integer" value="1" optional="true" label="Minimum number of proteins in a BGC"/>
        <param argument="--min-domains" type="integer" value="1" optional="true" label="Minimum number of protein domains in a BGC"/>
        <param argument="--min-bio-domains" type="integer" value="0" optional="true" label="Minimum number of known biosynthetic"/>
        <param argument="--classifier" type="select" optional="true" multiple="true" label="Trained classification model name">
            <option value="product_activity">product_activity</option>
            <option value="product_class">product_class</option>
        </param>
        <param argument="--no-classifier" type="boolean" truevalue="--no-classifier" falsevalue="" optional="true" label="Disable BGC classification" />
        <param argument="--classifier-score" type="float" value="0.5" optional="true" label="Classifier score" help="DeepBGC classification score threshold for assigning classes to BGCs"/>
    </inputs>
    <outputs>
        <data name="output" format="genbank" from_work_dir="output/output.bgc.gbk" label="Output BGC" />
        <data name="output" format="genbank" from_work_dir="output/output.full.gbk.part" label="Output full" />        
    </outputs>
    <tests>        
    </tests>
    <help><![CDATA[
@HELP_HEADER@

Pipeline
========
Run DeepBGC pipeline: Preparation, BGC detection, BGC classification and generate the report directory.

Inputs
======


Outputs
=======

    ]]></help> 
    <citations>
        <citation type="doi">10.1093/nar/gkz654</citation>
    </citations>
</tool>